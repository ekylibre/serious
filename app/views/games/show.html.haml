- if @game.broadcasts.any?
  #carousel.carousel.slide{data: {ride: 'carousel'}}
    .carousel-inner
      - @game.broadcasts.each_with_index do |broadcast, index|
        - classes = []
        - classes << "active" if index.zero?
        .item{class: classes}
          .carousel-content
            %div
              %h4= truncate(broadcast.name, length: 70)
              %p= truncate(broadcast.content, length: 250)

    - if @game.broadcasts.count > 1
      = link_to("#carousel", class: "left carousel-control", data: {slide: 'prev'}) do
        %span.glyphicon.glyphicon-chevron-left

      = link_to('#carousel', class: 'right carousel-control', data: {slide: 'next'}) do
        %span.glyphicon.glyphicon-chevron-right

#world.container
  %h1= @game.name
  #participants
    - @game.participants.order(:name).each do |participant|
      - next unless current_participation.can_see?(participant)
      - classes = []
      - classes << 'with-stand' if participant.present
      .participant.box-scene{class: classes}
        - side = [:right, :left, :top, :bottom][participant.code.to_i(36).modulo(4)]
        .box{class: "hover-on-#{side}"}
          - url = {controller: participant.class.name.tableize, action: :show, id: participant.id}
          = link_to(url, class: "participant-front face face-front") do
            - if participant.present
              .stand-number
                = participant.stand_number
            = participant_logo(participant)
            .participant-caption= participant.name
          = link_to(url, class: "participant-details face face-#{side}") do
            %h3= participant.name
            %span.label.label-primary= participant.class.model_name.human
            - [:contractor, :subcontractor, :supplier, :customer, :lender, :borrower].each do |state|
              - if participant.send(state)
                %span.label.label-success= Participant.human_attribute_name(state)

  -#= render 'curve'
